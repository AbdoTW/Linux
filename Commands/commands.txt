
///////////////////////////////////////////////////// Search for a world is faster !  /////////////////////////////////


ls -al --> to show the hidden files & ls -al "path_to_directory" --> gonna show all the files included hidden files in this path 

pwd --> "print working directory" 

cd /  --> go to the root directory

touch txt{1..5} --> create txt1 ,txt2 ..... ,txt5 
rm txt{1..5} --> remove txt1 ,txt2 ..... ,txt5

nano filename --> open the file and you can add edit the content 
less file --> read the file 
head file --> read the head of the file only 
tail file --> read the tail of the file only

cmp file1 file2 --> compare the two file
diff file1 file2 --> compare the two file and show the differences 

man anyword --> give you details about this word 

whoami 

whereis package_name or any word --> tell the path directory to it 

wget + url , curl + url > filename  ----> ways to download from url

zip  name_of_zipped_file  original_file --> zip original to zipped file or folder
unzip zipped_file  --> get the original file with the same name before zipping 

./binary file ---> execute the binary file after making it executable using chmod , ./ means the current directory 
cd ~ --> go to home && cd / --> go to root 

htop --> show all the system usage cpu , ram , and the pid for the processes and you can hold or kill them 
nvtop --> gpu temp and usage 

su root --> act as root all the current session (don't required any pass for any task) 
	$ sign --> act as user 
	# sign --> act as root
	exit --> to exit from the root mode 

apropos "any word" --> will get all the commands associated with this word 





;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; find ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
General Form :  find <path> <expression> 
find ~ -name "file_name"  --> search with filename in the home , this is better start from the home ,
		only return the filename result without extensions such as .pdf \
find <path> -iname "*.txt" --> "iname" means case-insensitive , will get the lower and upper cases &&and "-name" 
		means case-sensitive will get only the lower or upper case in filenameand here search with 
		extensions .pdf , .txt , .kbd and so on in case-insensitive .txt or .TXT or .Txt will match the result 
find <path> -type f --> find regular files "not links or directories"
find <path> -type l --> find symbolic link 
find <path> -type d -name "dir_name"  --> find directory by name 
find <path> -size +100M or -1k or 500c --> find files larger than 100MB or smaller than 1KB or exactly 500 bytes in order 
find <path> -mtime -7 or +30 --> find files modified in the last 7 days or more than 30 days 
find <path> -atime -7 or +30 --> find files accessed in the last 7 days or more than 30 days 
find <path> -perm 644        --> find files with exact permissions , must here owner can read ,write and group&other  can only read 
find <path> -perm /644       --> find files with any permissions , any owner with this permissions get it regardless 
		the group and other && any group with this perm get it regardlessto other and owner 
find <path> -perm -g=w       --> find files with write permission for the group 
find <path> -user username   --> find files owned by username 
find <path> -group group_name --> find files belonging to a specific group
find <path> -empty            --> find empty files or directories 


------------------------------------------find files and execute commands---------------------------------------------
General Syntax :  find <path> -type [f|d] -iname "file.ts" -exec command {} \;
		find files or directories with name file.ts case-insensitive and execute the command like "rm" or "chmod +x"
		or "gzip" or """cp {} /path/to/destination \;"""we can replace -exec with -ok and this will prompt you for 
		confirmation before executing command


----------------------------------------------chmod & chown---------------------------------------------------------
in the chown_chmod.pdf file 



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; fg && bg && jobs ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
jobs --> will show all the stopped and background programs and each program has a number you can use it with bg&&fg
fg --> foreground && bg --> background
fg %1 --> will work the program number 1 in jobs in current terminal &&
bg %2 --> will work the program number 2 in jobs in the background
ctrl + z when running program will stop the program , and
ctrl + c when running program will kill the program 


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; cp && mv && rm && rmdir ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
cp existing_file ./directory_name --> copy file to directory  && cp file1 ./dir/file2 --> copy file1 and rename it file2 to dir 
mv existing_file ./directory_name --> move file  to directory  && mv file1 ./dir/file2 --> move file1 and rename it file2 to dir
"cp or mv" directory -r  destination --> -r means recursive "move or copy the directory and all it's content to the destination" 
rm path/file_name --> to remove file 
rm ../../filename --> rm file from 2 previous directory, cp ,mv filename ../../  --> to move file to previous 2 directory
rmdir path/directory_name --> to remove empty directory 
rm -r path/directory_name --> to remove empty and nonempty directory (-r means recursive "include all files in the directory")

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;download from youtube ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
sudo apt install yt-dlp
yt-dlp -f 'bestvideo[height<=1440]+bestaudio' [video_url] --> download video or playlist url with customization of the resolution  
		if height<=720 will download it with 720p if not available go to 480p and so on  
yt-dlp -f 'bestvideo[height<=1440]+bestaudio' -N 5 http:video1 URL : http:video2 URL : ... : http:video5 URL  --> download videos sequential 

if you want to download them in Parallel --> open multiple tmux bins 
		
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;Conversation mode ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
# Default is enabled
function setcharging()
{
        echo ${1:-1}  | sudo tee /sys/bus/platform/drivers/ideapad_acpi/V>
}
write this lines in .bashrc file and to enable it write "setcharging 1" and "setcharging 0" for disable 


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Jobs & fg & bg ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
when we learne  tmux , we will ignore this 
when you run a program in terminal it is running in the Fg by default 
ctrl+z  --> stop running , we can use it with fg and bg 
ctrl+c  --> kill running process 
fg  --> means forground 
bg  --> means background 
jobs  --> show all the running and stopped programs in current session
fg %job_number_in_jobs  --> run the prgoram in forground
bg %job_number_in_jobs  --> run the program in background 


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; GitHub Token ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
tokenn : 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
git remote set-url origin https://<tokenn>@github.com/<username>/<repo>
git remote set-url origin https://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@github.com/AbdoTW/Linux


sudo apt install ./filename.deb    --> to install after downloading

ctrl + shift + v and c in terminal --> copy and past in the terminal

sudo usermod -aG input abdelrahman-tawfik  --> add yourself to input group , and if tap show all the groups 

ctrl + v  and the key --> show the sequence of the key in the terminal .

sudo !! --> !! means the previous command 

up and down arrows --> get the previous and next command 








Needs


3 fingers with touchpad
make backup for home directory which contains all configuration and bins -- > search 







problems

open hotspot from the wifi connection 




Abdelrahman HU :

ps ---> show all the process &&   fg + tab ---> forground >> return the stopped processes to running 
bg ---> background --> running the current program in the background 
jobs --> show all the waiting processes and the running background programs (stopped or running in the background )

what is the difference between 
cd home/abdo --> in the same directory   ,  ----------> 1 
/home/abdo  --> the path from the root (entire path ) ,
and ./home/abdo -->   . from root to the current directory   -------------> 2  && . means the current directory 
1 & 2 the same command 
. --> means current path  && / means from the root && and directory/path means this directory in current path 
but  used with " sudo apt install ./Downloads "because what after that is considered as debian file which will be installed , so we use ./ 



nmcli device wifi  -- > search 


 
